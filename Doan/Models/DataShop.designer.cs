#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Doan.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PETFOOD")]
	public partial class DataShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSanpham(Sanpham instance);
    partial void UpdateSanpham(Sanpham instance);
    partial void DeleteSanpham(Sanpham instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertNguoidung(Nguoidung instance);
    partial void UpdateNguoidung(Nguoidung instance);
    partial void DeleteNguoidung(Nguoidung instance);
    partial void InsertLoaiVat(LoaiVat instance);
    partial void UpdateLoaiVat(LoaiVat instance);
    partial void DeleteLoaiVat(LoaiVat instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertChitietHoadon(ChitietHoadon instance);
    partial void UpdateChitietHoadon(ChitietHoadon instance);
    partial void DeleteChitietHoadon(ChitietHoadon instance);
    partial void InsertLoaiSP(LoaiSP instance);
    partial void UpdateLoaiSP(LoaiSP instance);
    partial void DeleteLoaiSP(LoaiSP instance);
    #endregion
		
		public DataShopDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PETFOODConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Sanpham> Sanphams
		{
			get
			{
				return this.GetTable<Sanpham>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Nguoidung> Nguoidungs
		{
			get
			{
				return this.GetTable<Nguoidung>();
			}
		}
		
		public System.Data.Linq.Table<LoaiVat> LoaiVats
		{
			get
			{
				return this.GetTable<LoaiVat>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<ChitietHoadon> ChitietHoadons
		{
			get
			{
				return this.GetTable<ChitietHoadon>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSP> LoaiSPs
		{
			get
			{
				return this.GetTable<LoaiSP>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sanpham")]
	public partial class Sanpham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDsanpham;
		
		private string _TenSP;
		
		private System.Nullable<decimal> _GiaSP;
		
		private string _AnhSP;
		
		private string _MoTa;
		
		private System.Nullable<int> _SLton;
		
		private string _NSX;
		
		private string _TrongLuong;
		
		private string _DVT;
		
		private System.Nullable<int> _IDLoaiSP;
		
		private System.Nullable<int> _IDConvat;
		
		private EntitySet<ChitietHoadon> _ChitietHoadons;
		
		private EntityRef<LoaiVat> _LoaiVat;
		
		private EntityRef<LoaiSP> _LoaiSP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDsanphamChanging(int value);
    partial void OnIDsanphamChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnGiaSPChanging(System.Nullable<decimal> value);
    partial void OnGiaSPChanged();
    partial void OnAnhSPChanging(string value);
    partial void OnAnhSPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnSLtonChanging(System.Nullable<int> value);
    partial void OnSLtonChanged();
    partial void OnNSXChanging(string value);
    partial void OnNSXChanged();
    partial void OnTrongLuongChanging(string value);
    partial void OnTrongLuongChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnIDLoaiSPChanging(System.Nullable<int> value);
    partial void OnIDLoaiSPChanged();
    partial void OnIDConvatChanging(System.Nullable<int> value);
    partial void OnIDConvatChanged();
    #endregion
		
		public Sanpham()
		{
			this._ChitietHoadons = new EntitySet<ChitietHoadon>(new Action<ChitietHoadon>(this.attach_ChitietHoadons), new Action<ChitietHoadon>(this.detach_ChitietHoadons));
			this._LoaiVat = default(EntityRef<LoaiVat>);
			this._LoaiSP = default(EntityRef<LoaiSP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDsanpham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDsanpham
		{
			get
			{
				return this._IDsanpham;
			}
			set
			{
				if ((this._IDsanpham != value))
				{
					this.OnIDsanphamChanging(value);
					this.SendPropertyChanging();
					this._IDsanpham = value;
					this.SendPropertyChanged("IDsanpham");
					this.OnIDsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(MAX)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSP", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaSP
		{
			get
			{
				return this._GiaSP;
			}
			set
			{
				if ((this._GiaSP != value))
				{
					this.OnGiaSPChanging(value);
					this.SendPropertyChanging();
					this._GiaSP = value;
					this.SendPropertyChanged("GiaSP");
					this.OnGiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSP", DbType="NVarChar(50)")]
		public string AnhSP
		{
			get
			{
				return this._AnhSP;
			}
			set
			{
				if ((this._AnhSP != value))
				{
					this.OnAnhSPChanging(value);
					this.SendPropertyChanging();
					this._AnhSP = value;
					this.SendPropertyChanged("AnhSP");
					this.OnAnhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLton", DbType="Int")]
		public System.Nullable<int> SLton
		{
			get
			{
				return this._SLton;
			}
			set
			{
				if ((this._SLton != value))
				{
					this.OnSLtonChanging(value);
					this.SendPropertyChanging();
					this._SLton = value;
					this.SendPropertyChanged("SLton");
					this.OnSLtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NSX", DbType="NVarChar(50)")]
		public string NSX
		{
			get
			{
				return this._NSX;
			}
			set
			{
				if ((this._NSX != value))
				{
					this.OnNSXChanging(value);
					this.SendPropertyChanging();
					this._NSX = value;
					this.SendPropertyChanged("NSX");
					this.OnNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrongLuong", DbType="NChar(10)")]
		public string TrongLuong
		{
			get
			{
				return this._TrongLuong;
			}
			set
			{
				if ((this._TrongLuong != value))
				{
					this.OnTrongLuongChanging(value);
					this.SendPropertyChanging();
					this._TrongLuong = value;
					this.SendPropertyChanged("TrongLuong");
					this.OnTrongLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NChar(10)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiSP", DbType="Int")]
		public System.Nullable<int> IDLoaiSP
		{
			get
			{
				return this._IDLoaiSP;
			}
			set
			{
				if ((this._IDLoaiSP != value))
				{
					if (this._LoaiSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiSP = value;
					this.SendPropertyChanged("IDLoaiSP");
					this.OnIDLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDConvat", DbType="Int")]
		public System.Nullable<int> IDConvat
		{
			get
			{
				return this._IDConvat;
			}
			set
			{
				if ((this._IDConvat != value))
				{
					if (this._LoaiVat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDConvatChanging(value);
					this.SendPropertyChanging();
					this._IDConvat = value;
					this.SendPropertyChanged("IDConvat");
					this.OnIDConvatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_ChitietHoadon", Storage="_ChitietHoadons", ThisKey="IDsanpham", OtherKey="IDsanpham")]
		public EntitySet<ChitietHoadon> ChitietHoadons
		{
			get
			{
				return this._ChitietHoadons;
			}
			set
			{
				this._ChitietHoadons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVat_Sanpham", Storage="_LoaiVat", ThisKey="IDConvat", OtherKey="IDConvat", IsForeignKey=true)]
		public LoaiVat LoaiVat
		{
			get
			{
				return this._LoaiVat.Entity;
			}
			set
			{
				LoaiVat previousValue = this._LoaiVat.Entity;
				if (((previousValue != value) 
							|| (this._LoaiVat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiVat.Entity = null;
						previousValue.Sanphams.Remove(this);
					}
					this._LoaiVat.Entity = value;
					if ((value != null))
					{
						value.Sanphams.Add(this);
						this._IDConvat = value.IDConvat;
					}
					else
					{
						this._IDConvat = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiVat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_Sanpham", Storage="_LoaiSP", ThisKey="IDLoaiSP", OtherKey="IDLoaiSP", IsForeignKey=true)]
		public LoaiSP LoaiSP
		{
			get
			{
				return this._LoaiSP.Entity;
			}
			set
			{
				LoaiSP previousValue = this._LoaiSP.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSP.Entity = null;
						previousValue.Sanphams.Remove(this);
					}
					this._LoaiSP.Entity = value;
					if ((value != null))
					{
						value.Sanphams.Add(this);
						this._IDLoaiSP = value.IDLoaiSP;
					}
					else
					{
						this._IDLoaiSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChitietHoadons(ChitietHoadon entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = this;
		}
		
		private void detach_ChitietHoadons(ChitietHoadon entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _RoleName;
		
		private EntitySet<Nguoidung> _Nguoidungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Role()
		{
			this._Nguoidungs = new EntitySet<Nguoidung>(new Action<Nguoidung>(this.attach_Nguoidungs), new Action<Nguoidung>(this.detach_Nguoidungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NChar(20)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Nguoidung", Storage="_Nguoidungs", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<Nguoidung> Nguoidungs
		{
			get
			{
				return this._Nguoidungs;
			}
			set
			{
				this._Nguoidungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nguoidungs(Nguoidung entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Nguoidungs(Nguoidung entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nguoidung")]
	public partial class Nguoidung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDnguoidung;
		
		private string _Username;
		
		private string _Password;
		
		private string _HoTen;
		
		private string _SDT;
		
		private string _Diachi;
		
		private int _RoleID;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDnguoidungChanging(int value);
    partial void OnIDnguoidungChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public Nguoidung()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDnguoidung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDnguoidung
		{
			get
			{
				return this._IDnguoidung;
			}
			set
			{
				if ((this._IDnguoidung != value))
				{
					this.OnIDnguoidungChanging(value);
					this.SendPropertyChanging();
					this._IDnguoidung = value;
					this.SendPropertyChanged("IDnguoidung");
					this.OnIDnguoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(MAX)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nguoidung_HoaDon", Storage="_HoaDons", ThisKey="IDnguoidung", OtherKey="IDnguoidung")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Nguoidung", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Nguoidungs.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Nguoidungs.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Nguoidung = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Nguoidung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiVat")]
	public partial class LoaiVat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDConvat;
		
		private string _TenConVat;
		
		private EntitySet<Sanpham> _Sanphams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDConvatChanging(int value);
    partial void OnIDConvatChanged();
    partial void OnTenConVatChanging(string value);
    partial void OnTenConVatChanged();
    #endregion
		
		public LoaiVat()
		{
			this._Sanphams = new EntitySet<Sanpham>(new Action<Sanpham>(this.attach_Sanphams), new Action<Sanpham>(this.detach_Sanphams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDConvat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDConvat
		{
			get
			{
				return this._IDConvat;
			}
			set
			{
				if ((this._IDConvat != value))
				{
					this.OnIDConvatChanging(value);
					this.SendPropertyChanging();
					this._IDConvat = value;
					this.SendPropertyChanged("IDConvat");
					this.OnIDConvatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenConVat", DbType="NVarChar(50)")]
		public string TenConVat
		{
			get
			{
				return this._TenConVat;
			}
			set
			{
				if ((this._TenConVat != value))
				{
					this.OnTenConVatChanging(value);
					this.SendPropertyChanging();
					this._TenConVat = value;
					this.SendPropertyChanged("TenConVat");
					this.OnTenConVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVat_Sanpham", Storage="_Sanphams", ThisKey="IDConvat", OtherKey="IDConvat")]
		public EntitySet<Sanpham> Sanphams
		{
			get
			{
				return this._Sanphams;
			}
			set
			{
				this._Sanphams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVat = this;
		}
		
		private void detach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoadon;
		
		private System.Nullable<bool> _DaThanhToan;
		
		private System.Nullable<bool> _TinhTrangGiaohang;
		
		private System.Nullable<System.DateTime> _Ngaydat;
		
		private System.Nullable<System.DateTime> _Ngaygiao;
		
		private System.Nullable<int> _IDnguoidung;
		
		private EntitySet<ChitietHoadon> _ChitietHoadons;
		
		private EntityRef<Nguoidung> _Nguoidung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoadonChanging(int value);
    partial void OnIDHoadonChanged();
    partial void OnDaThanhToanChanging(System.Nullable<bool> value);
    partial void OnDaThanhToanChanged();
    partial void OnTinhTrangGiaohangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangGiaohangChanged();
    partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydatChanged();
    partial void OnNgaygiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaygiaoChanged();
    partial void OnIDnguoidungChanging(System.Nullable<int> value);
    partial void OnIDnguoidungChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChitietHoadons = new EntitySet<ChitietHoadon>(new Action<ChitietHoadon>(this.attach_ChitietHoadons), new Action<ChitietHoadon>(this.detach_ChitietHoadons));
			this._Nguoidung = default(EntityRef<Nguoidung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoadon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDHoadon
		{
			get
			{
				return this._IDHoadon;
			}
			set
			{
				if ((this._IDHoadon != value))
				{
					this.OnIDHoadonChanging(value);
					this.SendPropertyChanging();
					this._IDHoadon = value;
					this.SendPropertyChanged("IDHoadon");
					this.OnIDHoadonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit")]
		public System.Nullable<bool> DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangGiaohang", DbType="Bit")]
		public System.Nullable<bool> TinhTrangGiaohang
		{
			get
			{
				return this._TinhTrangGiaohang;
			}
			set
			{
				if ((this._TinhTrangGiaohang != value))
				{
					this.OnTinhTrangGiaohangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangGiaohang = value;
					this.SendPropertyChanged("TinhTrangGiaohang");
					this.OnTinhTrangGiaohangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this.OnNgaydatChanging(value);
					this.SendPropertyChanging();
					this._Ngaydat = value;
					this.SendPropertyChanged("Ngaydat");
					this.OnNgaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaygiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngaygiao
		{
			get
			{
				return this._Ngaygiao;
			}
			set
			{
				if ((this._Ngaygiao != value))
				{
					this.OnNgaygiaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaygiao = value;
					this.SendPropertyChanged("Ngaygiao");
					this.OnNgaygiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDnguoidung", DbType="Int")]
		public System.Nullable<int> IDnguoidung
		{
			get
			{
				return this._IDnguoidung;
			}
			set
			{
				if ((this._IDnguoidung != value))
				{
					if (this._Nguoidung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDnguoidungChanging(value);
					this.SendPropertyChanging();
					this._IDnguoidung = value;
					this.SendPropertyChanged("IDnguoidung");
					this.OnIDnguoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChitietHoadon", Storage="_ChitietHoadons", ThisKey="IDHoadon", OtherKey="IDHoadon")]
		public EntitySet<ChitietHoadon> ChitietHoadons
		{
			get
			{
				return this._ChitietHoadons;
			}
			set
			{
				this._ChitietHoadons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nguoidung_HoaDon", Storage="_Nguoidung", ThisKey="IDnguoidung", OtherKey="IDnguoidung", IsForeignKey=true)]
		public Nguoidung Nguoidung
		{
			get
			{
				return this._Nguoidung.Entity;
			}
			set
			{
				Nguoidung previousValue = this._Nguoidung.Entity;
				if (((previousValue != value) 
							|| (this._Nguoidung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nguoidung.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._Nguoidung.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IDnguoidung = value.IDnguoidung;
					}
					else
					{
						this._IDnguoidung = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nguoidung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChitietHoadons(ChitietHoadon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChitietHoadons(ChitietHoadon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChitietHoadon")]
	public partial class ChitietHoadon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDsanpham;
		
		private int _IDHoadon;
		
		private System.Nullable<int> _Soluong;
		
		private System.Nullable<decimal> _Dongia;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<Sanpham> _Sanpham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDsanphamChanging(int value);
    partial void OnIDsanphamChanged();
    partial void OnIDHoadonChanging(int value);
    partial void OnIDHoadonChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    partial void OnDongiaChanging(System.Nullable<decimal> value);
    partial void OnDongiaChanged();
    #endregion
		
		public ChitietHoadon()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._Sanpham = default(EntityRef<Sanpham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDsanpham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDsanpham
		{
			get
			{
				return this._IDsanpham;
			}
			set
			{
				if ((this._IDsanpham != value))
				{
					if (this._Sanpham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDsanphamChanging(value);
					this.SendPropertyChanging();
					this._IDsanpham = value;
					this.SendPropertyChanged("IDsanpham");
					this.OnIDsanphamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoadon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHoadon
		{
			get
			{
				return this._IDHoadon;
			}
			set
			{
				if ((this._IDHoadon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHoadonChanging(value);
					this.SendPropertyChanging();
					this._IDHoadon = value;
					this.SendPropertyChanged("IDHoadon");
					this.OnIDHoadonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChitietHoadon", Storage="_HoaDon", ThisKey="IDHoadon", OtherKey="IDHoadon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChitietHoadons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChitietHoadons.Add(this);
						this._IDHoadon = value.IDHoadon;
					}
					else
					{
						this._IDHoadon = default(int);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_ChitietHoadon", Storage="_Sanpham", ThisKey="IDsanpham", OtherKey="IDsanpham", IsForeignKey=true)]
		public Sanpham Sanpham
		{
			get
			{
				return this._Sanpham.Entity;
			}
			set
			{
				Sanpham previousValue = this._Sanpham.Entity;
				if (((previousValue != value) 
							|| (this._Sanpham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sanpham.Entity = null;
						previousValue.ChitietHoadons.Remove(this);
					}
					this._Sanpham.Entity = value;
					if ((value != null))
					{
						value.ChitietHoadons.Add(this);
						this._IDsanpham = value.IDsanpham;
					}
					else
					{
						this._IDsanpham = default(int);
					}
					this.SendPropertyChanged("Sanpham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSP")]
	public partial class LoaiSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLoaiSP;
		
		private string _TenLoai;
		
		private string _MotaLoai;
		
		private EntitySet<Sanpham> _Sanphams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLoaiSPChanging(int value);
    partial void OnIDLoaiSPChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnMotaLoaiChanging(string value);
    partial void OnMotaLoaiChanged();
    #endregion
		
		public LoaiSP()
		{
			this._Sanphams = new EntitySet<Sanpham>(new Action<Sanpham>(this.attach_Sanphams), new Action<Sanpham>(this.detach_Sanphams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLoaiSP
		{
			get
			{
				return this._IDLoaiSP;
			}
			set
			{
				if ((this._IDLoaiSP != value))
				{
					this.OnIDLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiSP = value;
					this.SendPropertyChanged("IDLoaiSP");
					this.OnIDLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotaLoai", DbType="NVarChar(MAX)")]
		public string MotaLoai
		{
			get
			{
				return this._MotaLoai;
			}
			set
			{
				if ((this._MotaLoai != value))
				{
					this.OnMotaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MotaLoai = value;
					this.SendPropertyChanged("MotaLoai");
					this.OnMotaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_Sanpham", Storage="_Sanphams", ThisKey="IDLoaiSP", OtherKey="IDLoaiSP")]
		public EntitySet<Sanpham> Sanphams
		{
			get
			{
				return this._Sanphams;
			}
			set
			{
				this._Sanphams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = this;
		}
		
		private void detach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = null;
		}
	}
}
#pragma warning restore 1591
